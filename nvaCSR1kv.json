{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vnetName": {
            "defaultValue": "myVnet",
            "type": "string"
        },
        "vnetPrefix": {
            "defaultValue": "192.168.100.0/24",
            "type": "string"
        },
        "subnet1Name": {
            "defaultValue": "subnet1",
            "type": "string"
        },
        "subnet1Prefix": {
            "defaultValue": "192.168.100.0/26",
            "type": "string"
        },
        "subnet2Name": {
            "defaultValue": "subnet2",
            "type": "string"
        },
        "subnet2Prefix": {
            "defaultValue": "192.168.100.64/26",
            "type": "string"
        },
        "subnet3Name": {
            "defaultValue": "subnet2",
            "type": "string"
        },
        "subnet3Prefix": {
            "defaultValue": "192.168.100.64/26",
            "type": "string"
        },
        "nvaName": {
            "type": "string",
            "defaultValue": "myCsr"
        },
        "nvaSize": {
            "type": "string",
            "defaultValue": "Standard_D2_v2"
        },
        "vm1Name": {
            "type": "string",
            "defaultValue": "myVm"
        },
        "vm1Size": {
            "type": "string",
            "defaultValue": "Standard_B1s"
        },
		 "vm2Name": {
            "type": "string",
            "defaultValue": "my2Vm"
        },
        "vm2Size": {
            "type": "string",
            "defaultValue": "Standard_B1s"
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "lab-user"
        },
        "adminPassword": {
            "type": "secureString"
        }
    },
    "variables": {
        "networkApiVersion": "2018-04-01",
        "computeApiVersion": "2018-06-01",
        "storageApiVersion": "2018-07-01",
        "nvaPipName": "[concat(parameters('nvaName'), '-pip')]",
        "vm1PipName": "[concat(parameters('vm1Name'), '-pip1')]",
		"vm2PipName": "[concat(parameters('vm2Name'), '-pip2')]",
        "pipType": "Static",
        "pipSku": "Basic",
        "nvaNicName": "[concat(parameters('nvaName'), '-nic1')]",
		"nvaNic2Name": "[concat(parameters('nvaName'), '-nic2')]",
        "vm1NicName": "[concat(parameters('vm1Name'), '-nic1')]",
		"vm2NicName": "[concat(parameters('vm2Name'), '-nic2')]",
        "nvaNsgName": "[concat(parameters('nvaName'), '-nsg')]",
        "vmNsgName": "[concat(parameters('vm2Name'), '-nsg1')]",
        "nvaNsgRules": [
            {
                "name": "SSH",
                "properties": {
                    "priority": 1010,
                    "protocol": "TCP",
                    "access": "Allow",
                    "direction": "Inbound",
                    "sourceApplicationSecurityGroups": [],
                    "destinationApplicationSecurityGroups": [],
                    "sourceAddressPrefix": "*",
                    "sourcePortRange": "*",
                    "destinationAddressPrefix": "*",
                    "destinationPortRange": "22"
                }
            }
        ],
        "vmNsgRules": [
            {
                "name": "SSH",
                "properties": {
                    "priority": 1010,
                    "protocol": "TCP",
                    "access": "Allow",
                    "direction": "Inbound",
                    "sourceApplicationSecurityGroups": [],
                    "destinationApplicationSecurityGroups": [],
                    "sourceAddressPrefix": "*",
                    "sourcePortRange": "*",
                    "destinationAddressPrefix": "*",
                    "destinationPortRange": "22"
                }
            },
            {
                "name": "HTTP",
                "properties": {
                    "priority": 1020,
                    "protocol": "TCP",
                    "access": "Allow",
                    "direction": "Inbound",
                    "sourceApplicationSecurityGroups": [],
                    "destinationApplicationSecurityGroups": [],
                    "sourceAddressPrefix": "*",
                    "sourcePortRange": "*",
                    "destinationAddressPrefix": "*",
                    "destinationPortRange": "80"
                }
            }
        ],
        "nvaNsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('nvaNsgName'))]",
        "vmNsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('vmNsgName'))]",
        "vm1DiskName": "[concat(parameters('vm1Name'), '-disk')]",
        "vm2DiskName": "[concat(parameters('vm2Name'), '-disk2')]",
		"vmDiskType": "Standard_LRS",
		"vmOsDiskSize": 32,
        "nvaOsDiskType": "StandardSSD_LRS",
        "vnetId": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
        "subnet1Ref": "[concat(variables('vnetId'), '/subnets/', parameters('subnet1Name'))]",
        "subnet2Ref": "[concat(variables('vnetId'), '/subnets/', parameters('subnet2Name'))]",
        "subnet3Ref": "[concat(variables('vnetId'), '/subnets/', parameters('subnet3Name'))]",
        "autoShutdownStatus": "Enabled",
        "autoShutdownTime": "19:00",
        "autoShutdownTimeZone": "EST",
        "autoShutdownNotificationStatus": "Disabled",
        "autoShutdownNotificationLocale": "en",
        "storageName": "[toLower(concat(uniqueString(resourceGroup().id), 'diag'))]",
        "storageId": "[resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "diagnosticsStorageAccountName": "[variables('storageName')]",
        "diagnosticsStorageAccountId": "[variables('storageId')]",
        "diagnosticsStorageAccountType": "Standard_LRS",
        "diagnosticsStorageAccountKind": "Storage",
		"customScript": "ubuntuConfig.sh",
		"thisTemplateUri": "[deployment().properties.templateLink.uri]",
        "customScriptUri": "[uri(variables('thisTemplateUri'), variables('customScript'))]",
        "customScriptCmd": "[concat('chmod 666 ', variables('customScript'), ' && /bin/sh ./', variables('customScript'))]"
   },
    "resources": [
        {
            "comments": "Create Vnet with three subnets",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('vnetName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet1Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('subnet2Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet2Prefix')]"
                        }
                    },
					{
                        "name": "[parameters('subnet3Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet3Prefix')]"
                        }
                    }
                ]
            },
            "resources": [],
            "dependsOn": []
        },
        {
            "comments": "Storage Account for diagnostics",
            "name": "[variables('storageName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[variables('storageApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {},
            "kind": "[variables('diagnosticsStorageAccountKind')]",
            "sku": {
                "name": "[variables('diagnosticsStorageAccountType')]"
            },
            "tags": {}
        },
        {
            "comments": "Create NIC1 for CSR",
            "name": "[variables('nvaNicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('nvaNsgName')]",
                "[variables('nvaPipName')]",
                "[parameters('vnetName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnet2Ref')]"
                            },
							"primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('nvaPipName'))]"
                            }
                        }
                    }
                ],
				 "enableAcceleratedNetworking": false,
                "enableIPForwarding": true,
                "primary": true,
                "tapConfigurations": [],
				
                "networkSecurityGroup": {
                    "id": "[variables('nvaNsgId')]"
                }
            },
            "tags": {}
        },
        {
            "comments": "Create NIC2 for CSR",
            "name": "[variables('nvaNicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('nvaNsgName')]",
                "[parameters('vnetName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig2",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            },
							"primary": false,
                            "privateIPAddressVersion": "IPv4",
                            "privateIPAllocationMethod": "Static"
                        }
                    }
                ],
				 "enableAcceleratedNetworking": false,
                "enableIPForwarding": true,
                "primary": true,
                "tapConfigurations": [],
				
                "networkSecurityGroup": {
                    "id": "[variables('nvaNsgId')]"
                }
            },
            "tags": {}
        },
        {
            "comments": "NSG allowing port 22 for CSR",
            "name": "[variables('nvaNsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": "[variables('nvaNsgRules')]"
            },
            "tags": {}
        },
        {
            "comments": "PIP for the NVA",
            "name": "[variables('nvaPipName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[variables('pipType')]"
            },
            "sku": {
                "name": "[variables('pipSku')]"
            },
            "tags": {}
        },
        {
            "comments": "Cisco CSR 1000v NVA",
            "name": "[parameters('nvaName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "[variables('computeApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('nvaNicName')]",
                "[variables('nvaNic2Name')]",
                "[variables('storageName')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('nvaSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('nvaOsDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "cisco",
                        "offer": "cisco-csr-1000v",
                        "sku": "16_9-byol",
                        "version": "16.9.120180924"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nvaNicName'))]",
							"id2": "[resourceId('Microsoft.Network/networkInterfaces', variables('nvaNic2Name'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('nvaName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', variables('diagnosticsStorageAccountName'), '.blob.core.windows.net/')]"
                    }
                }
            },
            "plan": {
                "name": "16_9-byol",
                "publisher": "cisco",
                "product": "cisco-csr-1000v"
            },
            "tags": {}
        },
        {
            "comments": "Shutdown schedule for CSR",
            "name": "[concat('shutdown-computevm-', parameters('nvaName'))]",
            "type": "Microsoft.DevTestLab/schedules",
            "apiVersion": "2017-04-26-preview",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('nvaName'))]"
            ],
            "properties": {
                "status": "[variables('autoShutdownStatus')]",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "[variables('autoShutdownTime')]"
                },
                "timeZoneId": "[variables('autoShutdownTimeZone')]",
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('nvaName'))]",
                "notificationSettings": {
                    "status": "[variables('autoShutdownNotificationStatus')]",
                    "notificationLocale": "[variables('autoShutdownNotificationLocale')]",
                    "timeInMinutes": "30"
                }
            },
            "tags": {}
        },
        {
            "comments": "Crate NIC for VM 1",
            "name": "[variables('vm1NicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('vmNsgName')]",
                "[variables('vm1PipName')]",
                "[parameters('vnetName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnet3Ref')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('vm1PipName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('vmNsgId')]"
                }
            },
            "tags": {}
        },
        {
            "comments": "Crate NIC for VM2",
            "name": "[variables('vm1NicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('vmNsgName')]",
                "[variables('vm1PipName')]",
                "[parameters('vnetName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnet3Ref')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('vm2PipName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('vmNsgId')]"
                }
            },
            "tags": {}
        },		
        {
            "comments": "NSG allowing port 22 for VM1",
            "name": "[variables('vmNsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": "[variables('vmNsgRules')]"
            },
            "tags": {}
        },
        {
            "comments": "PIP for the VM1",
            "name": "[variables('vm1PipName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[variables('pipType')]"
            },
            "sku": {
                "name": "[variables('pipSku')]"
            },
            "tags": {}
        },
        {
            "comments": "NSG allowing port 22 for VM2",
            "name": "[variables('vmNsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": "[variables('vmNsgRules')]"
            },
            "tags": {}
        },
        {
            "comments": "PIP for the VM2",
            "name": "[variables('vm2PipName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[variables('pipType')]"
            },
            "sku": {
                "name": "[variables('pipSku')]"
            },
            "tags": {}
        },
        {
            "comments": "Deploy Linux VM1",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vm1Name')]",
            "apiVersion": "[variables('computeApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vm1Size')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "caching": "ReadWrite",
                        "name": "[variables('vm1DiskName')]",
                        "diskSizeGb": "[variables('vmOsDiskSize')]",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('vmDiskType')]"
                        }
                        },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('vm1Name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false
                    },
                    "secrets": [],
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm1NicName'))]",
                            "properties": {
                                "primary": true
                            }
                        }
                    ]
                }
            },
            "resources": [],
            "dependsOn": [
                "[variables('vm1NicName')]"
            ]
        }, 
        {
            "comments": "Shutdown schedule for VM 1",
            "name": "[concat('shutdown-computevm-', parameters('vm1Name'))]",
            "type": "Microsoft.DevTestLab/schedules",
            "apiVersion": "2017-04-26-preview",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('vm1Name'))]"
            ],
            "properties": {
                "status": "[variables('autoShutdownStatus')]",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "[variables('autoShutdownTime')]"
                },
                "timeZoneId": "[variables('autoShutdownTimeZone')]",
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vm1Name'))]",
                "notificationSettings": {
                    "status": "[variables('autoShutdownNotificationStatus')]",
                    "notificationLocale": "[variables('autoShutdownNotificationLocale')]",
                    "timeInMinutes": "30"
                }
            },
            "tags": {}
        },
        {
            "comments": "Deploy Linux VM2",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vm2Name')]",
            "apiVersion": "[variables('computeApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vm2Size')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "caching": "ReadWrite",
                        "name": "[variables('vm2DiskName')]",
                        "diskSizeGb": "[variables('vmOsDiskSize')]",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('vmDiskType')]"
                        }
                        },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('vm2Name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false
                    },
                    "secrets": [],
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm2NicName'))]",
                            "properties": {
                                "primary": true
                            }
                        }
                    ]
                }
            },
            "resources": [],
            "dependsOn": [
                "[variables('vm2NicName')]"
            ]
        }, 
        {
            "comments": "Shutdown schedule for VM2",
            "name": "[concat('shutdown-computevm-', parameters('vm2Name'))]",
            "type": "Microsoft.DevTestLab/schedules",
            "apiVersion": "2017-04-26-preview",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('vm2Name'))]"
            ],
            "properties": {
                "status": "[variables('autoShutdownStatus')]",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "[variables('autoShutdownTime')]"
                },
                "timeZoneId": "[variables('autoShutdownTimeZone')]",
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vm2Name'))]",
                "notificationSettings": {
                    "status": "[variables('autoShutdownNotificationStatus')]",
                    "notificationLocale": "[variables('autoShutdownNotificationLocale')]",
                    "timeInMinutes": "30"
                }
            },
            "tags": {}
        }, 
		{
			"comments": "Create Linux custom extension to install software in the VM 1",
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(parameters('vm1Name'), '/installcustomscript')]",
			"apiVersion": "[variables('computeApiVersion')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"publisher": "Microsoft.Azure.Extensions",
				"type": "CustomScript",
				"typeHandlerVersion": "2.0",
				"autoUpgradeMinorVersion": true,
				"settings": {
					"fileUris": [
						"[variables('customScriptUri')]"
					],
					"commandToExecute": "[variables('customScriptCmd')]"
				}
			},
			"dependsOn": [
				"[parameters('vm1Name')]"
			]
        },
        {
			"comments": "Create Linux custom extension to install software in the VM2",
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(parameters('vm2Name'), '/installcustomscript')]",
			"apiVersion": "[variables('computeApiVersion')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"publisher": "Microsoft.Azure.Extensions",
				"type": "CustomScript",
				"typeHandlerVersion": "2.0",
				"autoUpgradeMinorVersion": true,
				"settings": {
					"fileUris": [
						"[variables('customScriptUri')]"
					],
					"commandToExecute": "[variables('customScriptCmd')]"
				}
			},
			"dependsOn": [
				"[parameters('vm2Name')]"
			]
		}
     ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}